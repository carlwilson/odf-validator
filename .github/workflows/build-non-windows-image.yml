name: "Build Non-Windows images"
# author: Carl Wilson <carl_AT_openpreservation.org>

on:
  workflow_call:
    inputs:
      release_version:
        description: "Release version"
        required: true
        type: string
      release_tag:
        description: "Release tag"
        required: true
        type: string
jobs:
  build:
    name: "Build Non-Windows image"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: 'ubuntu-latest'
            label: 'linux'
          - os: 'macos-latest'
            label: 'mac'
    runs-on: ${{matrix.os}}
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4

    - name: 'Setup Java 11'
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 11

    - name: 'Setup GraalVM Environment'
      uses: DeLaGuardo/setup-graalvm@5.0
      with:
        graalvm-version: '20.1.0.java11'

    - name: 'Install Native Image Plugin'
      run: |
        gu install native-image

    - name: 'Get JAR Artifact'
      uses: actions/download-artifact@v4
      id: get_jar_artifact
      with:
        name: 'odf-validator-${{ inputs.release_version }}-all.jar'

    - name: "Get Maven POM version"
      id: pom-version
      run: echo "version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

    - name: 'Build Native Image'
      run: |
        native-image --no-server --no-fallback \
        --allow-incomplete-classpath \
        -H:ResourceConfigurationFiles=native-image/config/resource-config.json \
        -H:ReflectionConfigurationFiles=native-image/config/reflect-config.json \
        -H:JNIConfigurationFiles=native-image/config/jni-config.json \
        -H:Name=odf-validator-${{ inputs.release_version }}-all \
        -H:Class=org.openpreservation.odf.apps.CliValidator \
        -jar odf-apps-${{ steps.pom-version.outputs.version }}-jar-with-dependencies.jar

    - name: 'Publish Native Image'
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: 'odf-validator-${{ inputs.release_version }}-${{matrix.label}}'
        path: 'odf-validator-${{ inputs.release_version }}-all'

    - name: "Upload release binaries"
      if: success()
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: "odf-validator-${{ inputs.release_version }}-all"
        asset_name: "odf-validator-${{ inputs.release_version }}-${{matrix.label}}"
        tag: "${{ inputs.release_tag }}"
        overwrite: true
        draft: false
        prerelease: false
